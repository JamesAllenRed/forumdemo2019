apiVersion: v1
kind: Template
metadata:
  name: optaplanner-demo
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: optaplanner-demo
      group: com.redhat.demo.optaplanner
      version: 0.0.1-SNAPSHOT
    name: optaplanner-demo
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: optaplanner-demo
      group: com.redhat.demo.optaplanner
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: optaplanner-demo
          group: com.redhat.demo.optaplanner
          version: 0.0.1-SNAPSHOT
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/redhatdemo/optaplanner-demo:latest
          imagePullPolicy: IfNotPresent
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: optaplanner-demo
      expose: "true"
      group: com.redhat.demo.optaplanner
      version: 0.0.1-SNAPSHOT
    name: optaplanner-demo
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: optaplanner-demo
      group: com.redhat.demo.optaplanner
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: optaplanner-demo
      expose: "true"
      group: com.redhat.demo.optaplanner
      version: 0.0.1-SNAPSHOT
    name: optaplanner-demo
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: optaplanner-demo
      weight: 100
    wildcardPolicy: None
